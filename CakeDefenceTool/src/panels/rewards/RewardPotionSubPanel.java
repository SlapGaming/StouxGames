/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package panels.rewards;

import customelements.groupcombobox.GroupModel;
import customelements.groupcombobox.GroupRenderer;
import customelements.groupcombobox.NonClickableEntry;
import entity.collections.PotionItemCollection;
import entity.enums.PotionItemType;

/**
 *
 * @author Leon
 */
public class RewardPotionSubPanel extends javax.swing.JPanel {

    private GroupModel splash;
    private GroupModel nonSplash;
    
    /**
     * Creates new form RewardPotionPanel
     */
    public RewardPotionSubPanel() {
        initComponents();
        initializeModels();
        potionEffectComboBox.setModel(nonSplash);
        potionEffectComboBox.setRenderer(new GroupRenderer());
        potionEffectComboBox.setSelectedIndex(0);
    }
    
    private void initializeModels() {
        splash = new GroupModel();
        nonSplash = new GroupModel();
        addToModel("Regeneration", PotionItemCollection.REGEN);
        addToModel("Swiftness", PotionItemCollection.SWIFT);
        addToModel("Fire Resistance", PotionItemCollection.FIRE_RES);
        addToModel("Healing", PotionItemCollection.HEALING);
        addToModel("Night Vision", PotionItemCollection.NIGHT);
        addToModel("Strength", PotionItemCollection.STRENGTH);
    }
    
    private void addToModel(String nonClickable, PotionItemType[] types) {
        NonClickableEntry non = new NonClickableEntry(nonClickable);
        splash.addElement(non);
        nonSplash.addElement(non);
        for (PotionItemType type : types) {
            if (type.isNormal()) nonSplash.addElement(type);
            if (type.isSplash()) splash.addElement(type);
        }
    }
    
    
    public PotionItemType getPotionType() {
        return (PotionItemType) potionEffectComboBox.getSelectedItem();
    }
    
    public boolean isSplash() {
        return splashPotionCheck.isSelected();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        potionEffectComboBox = new javax.swing.JComboBox();
        splashPotionCheck = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();

        potionEffectComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        splashPotionCheck.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        splashPotionCheck.setText("Splash Potion");
        splashPotionCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                splashPotionCheckActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Potion Effect");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(splashPotionCheck))
                    .addComponent(potionEffectComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(potionEffectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(splashPotionCheck)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void splashPotionCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_splashPotionCheckActionPerformed
        Object selectedItem = potionEffectComboBox.getSelectedItem();
        if (splashPotionCheck.isSelected()) {
            switchSplash(selectedItem, splash);
        } else {
            switchSplash(selectedItem, nonSplash);
        }
    }//GEN-LAST:event_splashPotionCheckActionPerformed

    private void switchSplash(Object selectedItem, GroupModel toModel) {
        potionEffectComboBox.setModel(toModel);
        int index = splash.getIndexOf(selectedItem);
        if (index == -1) toModel.setSelectedItem(toModel.getElementAt(0));
        else toModel.setSelectedItem(selectedItem);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox potionEffectComboBox;
    private javax.swing.JCheckBox splashPotionCheck;
    // End of variables declaration//GEN-END:variables
}
