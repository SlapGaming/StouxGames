/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package panels.rounds;

import Frame.MainFrame;
import entity.collections.RewardCollection;
import entity.collections.Round;
import entity.instance.Mob;
import java.util.ArrayList;
import java.util.HashSet;
import logic.Controller;
import panels.interfaces.PanelInterface;

/**
 *
 * @author Leon
 */
public class RoundPanel extends javax.swing.JPanel implements PanelInterface {

    private boolean editing;
    private Round editingRound;
    
    private RoundTabMobs mobsPanel;
    private RoundTabRewards rewardsPanel;
    
    private RoundsPanel mainPanel;
    
    /**
     * Creates new form RoundPanel
     */
    public RoundPanel(RoundsPanel mainPanel) {
        MainFrame mf = MainFrame.getFrame();
        mf.resetButtons();
        mf.setNextButtonText("Add round");
        this.mainPanel = mainPanel;
        initComponents();
        tabPanel.addTab("Mobs", (mobsPanel = new RoundTabMobs()));
        tabPanel.addTab("Rewards", (rewardsPanel = new RoundTabRewards()));
        editing = false;
    }
    
    public void editRound(Round round) {
        editingRound = round;
        editing = true;
        mobsPanel.editRound(round.getMobs());
        rewardsPanel.editRound(round);
        MainFrame.getFrame().setNextButtonText("Edit round");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabPanel = new javax.swing.JTabbedPane();

        tabPanel.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane tabPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getTitle() {
        return "New Round";
    }

    @Override
    public String getHelp() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void next() {
        ArrayList<Mob> mobs = mobsPanel.getMobs();
        if (mobs.isEmpty()) {
            MainFrame.throwError("You need to add mobs to a round!");
            return;
        }
        if (editing) {
            editingRound.setBad(rewardsPanel.getBadRewards());
            editingRound.setGood(rewardsPanel.getGoodRewards());
            editingRound.setMediocre(rewardsPanel.getMediocreRewards());
            editingRound.setEveryone(rewardsPanel.getEndRewards());
            editingRound.setMobs(new HashSet<>(mobsPanel.getMobs()));
        } else {
            Controller
                    .getInstance()
                    .getRoutine()
                    .addRound(new Round(
                        new HashSet<>(mobs), rewardsPanel.getEndRewards(), rewardsPanel.getBadRewards(), rewardsPanel.getMediocreRewards(), rewardsPanel.getGoodRewards()
                        ));
        }
        Controller
                .getInstance()
                .getFrame()
                .setPanel(mainPanel);
        mainPanel.updateTree();
    }

    @Override
    public void back() {
        Controller
                .getInstance()
                .getFrame()
                .setPanel(mainPanel);
        mainPanel.setButtons();
    }
}
